name: Maven Build

on:
  push:
    branches:
      - main
    tags-ignore:
      - '*'

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[maven-release-plugin]')"
    runs-on: ubuntu-latest
    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Git
#        run: |
#          git config --global user.email "androkc1999@gmail.com"
#          git config --global user.name "androkc"
#
#      - name: Set PAT_TOKEN
#        run: echo "PAT_TOKEN=${{ secrets.PAT_TOKEN }}" >> $GITHUB_ENV
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'temurin'
#          java-version: '11'
#      - name: Build and Deploy
#        env:
#          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
#        run:
#          |
#          mvn clean -B release:prepare -Dgit.token=${{ secrets.GITHUB_TOKEN }} -DskipTests


      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin' # можно заменить на 'adopt' или 'zulu' в зависимости от предпочтений

      - name: Set up SSH
        run: |
          # Устанавливаем ssh-agent
          which ssh-agent || (apt-get update -y && apt-get install openssh-client -y)
          
          # Запускаем ssh-agent
          eval $(ssh-agent -s)
               
               
          # Используем expect для автоматического ввода парольной фразы
          sudo apt-get install -y expect
          expect -c "
          spawn ssh-add <(echo \"$SSH_PRIVATE_KEY\")
          expect \"Enter passphrase\"
          send \"$SSH_PASSPHRASE\r\"
          expect eof
          "
          # Добавляем SSH ключ в агент, используя парольную фразу
          # echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - <<< "$SSH_PASSPHRASE"
          
          # Отключаем проверку хоста для Docker
          mkdir -p ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          

        shell: /usr/bin/bash -e {0}
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Секретный ключ, сохраненный в Secrets
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}

      - name: Maven release:prepare
        run: mvn release:prepare -B -DskipTests=true

      - name: Maven release:perform
        run: mvn release:perform --settings .ci/settings.xml -B -DskipTests=true






